{"ast":null,"code":"var _jsxFileName = \"/Users/nathantamari/Desktop/React-Projects/ski/src/components/Dropdown.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useEffect } from \"react\";\nimport './Dropdown.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dropdown(props) {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const toggleDropDown = () => setIsOpen(prev => !prev);\n  const [message, setMessage] = useState(\"Choose Option\");\n  const dropdownRef = useRef(null);\n  const changeMessage = m => {\n    setMessage(m);\n    setIsOpen(false);\n  };\n  useEffect(() => {\n    const handleOutsideClick = e => {};\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropdown-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: props.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"dropdown-button\",\n        onClick: toggleDropDown,\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), isOpen && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"dropdown-menu\",\n        children: props.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"element\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"element-button\",\n            onClick: () => changeMessage(option),\n            children: option\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_s(Dropdown, \"bIZplgJuIe834aoYeCgajoja/d0=\");\n_c = Dropdown;\nexport default Dropdown;\nvar _c;\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"names":["useState","useRef","useEffect","jsxDEV","_jsxDEV","Dropdown","props","_s","isOpen","setIsOpen","toggleDropDown","prev","message","setMessage","dropdownRef","changeMessage","m","handleOutsideClick","e","className","children","label","fileName","_jsxFileName","lineNumber","columnNumber","onClick","options","map","option","index","_c","$RefreshReg$"],"sources":["/Users/nathantamari/Desktop/React-Projects/ski/src/components/Dropdown.js"],"sourcesContent":["import { useState, useRef, useEffect } from \"react\";\nimport './Dropdown.css';\n\nfunction Dropdown(props) {\n    const[isOpen, setIsOpen] = useState(false);\n    const toggleDropDown = () => setIsOpen((prev)=> !prev);\n    const [message, setMessage] = useState(\"Choose Option\");\n    const dropdownRef = useRef(null);\n\n\n    const changeMessage = (m) => {\n        setMessage(m);\n        setIsOpen(false);\n    }\n\n    useEffect(() => {\n        const handleOutsideClick = (e) => {\n            \n        }\n    })\n\n    return ( \n        <div className=\"dropdown-container\">\n            <div className=\"dropdown\">\n            <label>{props.label}</label>\n            <button className=\"dropdown-button\" onClick={toggleDropDown}>\n               {message}\n            </button> \n\n            {isOpen && (\n                <ul className=\"dropdown-menu\">\n                    {props.options.map((option, index) => (\n                        <div className=\"element\">\n                            <button className=\"element-button\" key={index} onClick={() => changeMessage(option)}>{option}</button>\n                        </div>\n                    ))}\n                </ul>\n            )}\n        </div>\n        </div>\n        \n    );\n}\n\nexport default Dropdown;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AACnD,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACrB,MAAK,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC1C,MAAMU,cAAc,GAAGA,CAAA,KAAMD,SAAS,CAAEE,IAAI,IAAI,CAACA,IAAI,CAAC;EACtD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,eAAe,CAAC;EACvD,MAAMc,WAAW,GAAGb,MAAM,CAAC,IAAI,CAAC;EAGhC,MAAMc,aAAa,GAAIC,CAAC,IAAK;IACzBH,UAAU,CAACG,CAAC,CAAC;IACbP,SAAS,CAAC,KAAK,CAAC;EACpB,CAAC;EAEDP,SAAS,CAAC,MAAM;IACZ,MAAMe,kBAAkB,GAAIC,CAAC,IAAK,CAElC,CAAC;EACL,CAAC,CAAC;EAEF,oBACId,OAAA;IAAKe,SAAS,EAAC,oBAAoB;IAAAC,QAAA,eAC/BhB,OAAA;MAAKe,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACzBhB,OAAA;QAAAgB,QAAA,EAAQd,KAAK,CAACe;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC5BrB,OAAA;QAAQe,SAAS,EAAC,iBAAiB;QAACO,OAAO,EAAEhB,cAAe;QAAAU,QAAA,EACxDR;MAAO;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,EAERjB,MAAM,iBACHJ,OAAA;QAAIe,SAAS,EAAC,eAAe;QAAAC,QAAA,EACxBd,KAAK,CAACqB,OAAO,CAACC,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAC7B1B,OAAA;UAAKe,SAAS,EAAC,SAAS;UAAAC,QAAA,eACpBhB,OAAA;YAAQe,SAAS,EAAC,gBAAgB;YAAaO,OAAO,EAAEA,CAAA,KAAMX,aAAa,CAACc,MAAM,CAAE;YAAAT,QAAA,EAAES;UAAM,GAApDC,KAAK;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAwD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrG,CACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CACP;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAGd;AAAClB,EAAA,CAvCQF,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AAyCjB,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}